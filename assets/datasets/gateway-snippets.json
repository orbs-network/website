{
  "toncenter-http-api-v2.npm-ton.mainnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getHttpEndpoint } from \"@orbs-network/ton-access\";\r\nimport { TonClient } from \"ton\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst endpoint = await getHttpEndpoint(); \r\n\r\n// initialize ton library\r\nconst client = new TonClient({ endpoint });",
  "toncenter-http-api-v2.npm-ton.testnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getHttpEndpoint } from \"@orbs-network/ton-access\";\r\nimport { TonClient } from \"ton\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst endpoint = await getHttpEndpoint({\r\n  network: \"testnet\",\r\n}); \r\n\r\n// initialize ton library\r\nconst client = new TonClient({ endpoint });",
  "toncenter-http-api-v2.npm-tonweb.mainnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getHttpEndpoint } from \"@orbs-network/ton-access\";\r\nimport TonWeb from \"tonweb\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst endpoint = await getHttpEndpoint();\r\n\r\n// initialize tonweb library\r\nconst tonweb = new TonWeb(new TonWeb.HttpProvider(endpoint));",
  "toncenter-http-api-v2.npm-tonweb.testnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getHttpEndpoint } from \"@orbs-network/ton-access\";\r\nimport TonWeb from \"tonweb\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst endpoint = await getHttpEndpoint({\r\n  network: \"testnet\" \r\n}); \r\n\r\n// initialize tonweb library\r\nconst tonweb = new TonWeb(new TonWeb.HttpProvider(endpoint));",
  "toncenter-http-api-v2.cdn-tonweb.mainnet": "<script src=\"https://cdn.jsdelivr.net/gh/orbs-network/ton-access@2.2.0/dist/index.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/gh/toncenter/tonweb/dist/tonweb.js\"></script>\r\n\r\n<script>\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        // get the decentralized RPC endpoint\r\n        TonAccess.getHttpEndpoint().then((endpoint) => { \r\n            // initialize tonweb library\r\n            const tonweb = new TonWeb(new TonWeb.HttpProvider(endpoint)); \r\n        });\r\n    });\r\n</script>",
  "toncenter-http-api-v2.cdn-tonweb.testnet": "<script src=\"https://cdn.jsdelivr.net/gh/orbs-network/ton-access@2.2.0/dist/index.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/gh/toncenter/tonweb/dist/tonweb.js\"></script>\r\n\r\n<script>\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        // get the decentralized RPC endpoint\r\n        TonAccess.getHttpEndpoint({ network: \"testnet\" }).then((endpoint) => { \r\n            // initialize tonweb library\r\n            const tonweb = new TonWeb(new TonWeb.HttpProvider(endpoint)); \r\n        });\r\n    });\r\n</script>",
  "tonhub-http-api-v4.npm-ton.mainnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getHttpV4Endpoint } from \"@orbs-network/ton-access\";\r\nimport { TonClient4 } from \"ton\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst endpoint = await getHttpV4Endpoint();\r\n\r\n// initialize ton library\r\nconst client4 = new TonClient4({ endpoint });",
  "tonhub-http-api-v4.npm-ton.testnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getHttpV4Endpoint } from \"@orbs-network/ton-access\";\r\nimport { TonClient4 } from \"ton\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst endpoint = await getHttpV4Endpoint({\r\n  network: \"testnet\",\r\n});\r\n\r\n// initialize ton library\r\nconst client4 = new TonClient4({ endpoint });",
  "raw-adnl-api.ton-lite-client.mainnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getAdnlProxyEndpoint } from \"@orbs-network/ton-access\";\r\nimport { LiteClient, LiteSingleEngine } from \"ton-lite-client\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst { endpoint, publicKey } = await getAdnlProxyEndpoint();\r\nconst engine = new LiteSingleEngine({ host: endpoint, publicKey });\r\n\r\n// initialize ton-lite-client library\r\nconst client = new LiteClient({ engine });",
  "raw-adnl-api.ton-lite-client.testnet": "// copy paste the following snippet into your dapp client code\r\n// to initialize your favorite TON API library and make blockchain queries\r\n\r\nimport { getAdnlProxyEndpoint } from \"@orbs-network/ton-access\";\r\nimport { LiteClient, LiteSingleEngine } from \"ton-lite-client\";\r\n\r\n// get the decentralized RPC endpoint\r\nconst { endpoint, publicKey } = await getAdnlProxyEndpoint({\r\n  network: \"testnet\",\r\n});\r\nconst engine = new LiteSingleEngine({ host: endpoint, publicKey });\r\n\r\n// initialize ton-lite-client library\r\nconst client = new LiteClient({ engine });"
}
